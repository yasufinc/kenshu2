研修2-5

Q1-1
・オブジェクトとは
関連する変数（値）とメソッド（動作）をまとめて、そのまとまりに名前を付けたもの
配列、Hash、数字、文字列など全てオブジェクト。
https://techacademy.jp/magazine/18767

・クラスとは
インスタンスの元となる設計図。
デフォルトで備わっているものと、自分で作成するものがある。

・インスタンスとは
クラスから作られる実物体。
クラス名.newで作られる。

・クラスメソッド
https://pikawaka.com/ruby/class
クラスから実行できるメソッド。
インスタンスに依存せずにクラス本体に紐づけられるメソッド

・インスタンスメソッド
（作成したインスタンスから実行できるメソッド。）
クラスのインスタンスに対して紐づいているメソッド。（クラス内に書いてある）
class クラス名
	def self.クラスメソッド名
で定義できる。



Q1-2
・継承
定義済みのクラスを継承して新しいクラスを作成すること。継承元のクラスをスーパークラス（親クラス）、継承して作成したクラスをサブクラスという。似たような処理を行うクラスや使用頻度の高いクラスなど、共通部分のあるクラスを利用するために継承する。継承することで、コードが整理されて読みやすくなる。

・カプセル化
オブジェクト同士の紐付き（関係性）を薄くし、独立性を高め、再利用や交換といった保守性を高める効率の考え方。例えば、インスタンスからは、各インスタンスメソッドの呼び出し時に、いちいち引数を渡さなくていいなど。
https://note.com/taka027/n/nbc4ff8856ef8

・ポリモーフィズム
ポリモーフィズム(Polymorphism, 日本語で多態性)とは、オブジェクト指向プログラミングにおける概念、手法の一つ。異なるクラスに対し、同一のインターフェースが提供されていることを言う。クラスを使う側は、クラスの実態を意識せずにメソッドを呼び出せる。Rubyではクラス継承で実現する。親クラスのメソッドを子クラスで再定義して使う。



Q1-3
・ゲッター
値をゲットする（attr_accessor :nameの際に、nameメソッドが作られるのと同義）
ゲッターのみ定義したい場合は、attr_reader :name

・セッター
値をセットする（attr_accessor :nameの際に、name=(value)が作られるのと同義）
セッターのみ定義したい場合は、attr_writer :name
https://qiita.com/aberyotaro/items/626a88388d44802240a0

・initialize
クラス名.newでインスタンス作成される時に、実行されるメソッド。
＠がついたインスタンス変数に値を代入することが多い。
メソッドの内で定義した変数はメソッドの外では利用できないが、インスタンス変数はインスタンス内であればどこでも呼び出すことが出来る。

・private
https://dotinstall.com/lessons/basic_ruby_v3/37123
Lesson23
public => どこからでもアクセス可能
protected => クラス内、同一パッケージ、サブクラスからアクセス可
private => クラス内のみアクセス可能（インスタンスからは呼び出せない）


Q3
Active recordの親クラスのほうで定義されているから。
